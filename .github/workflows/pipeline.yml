name: Build and Package Java Web Application

on:
    push:
      branches:
        - master
      paths:
        - 'src/**'
        - 'Dockerfile'
        - 'pom.xml'

jobs:

  checkout-and-scan-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        
  build-scan-push:
    runs-on: ubuntu-latest
    needs: checkout-and-scan-code
    steps:

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Build WAR with Maven
        run: mvn clean package
        
      - name: Generate Timestamp
        run: echo "TIMESTAMP=$(date -d '+2 hours' +%Y%m%d%H%M)" >> $GITHUB_ENV  

      - name: Build Docker image with timestamp
        run: docker build -t djoksa4/kubernetes-cicd-webapp:${{ env.TIMESTAMP }} .  

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: djoksa4/kubernetes-cicd-webapp:${{ env.TIMESTAMP }}
          severity: CRITICAL,HIGH
          exit-code: 1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push djoksa4/kubernetes-cicd-webapp:${{ env.TIMESTAMP }}

      - name: Upload Timestamp Artifact
        uses: actions/upload-artifact@v3
        with:
          name: timestamp
          path: timestamp.txt


  helm-update:
    runs-on: ubuntu-latest
    needs: build-scan-push
    steps:

      - name: Download Timestamp Artifact
        uses: actions/download-artifact@v3
        with:
          name: timestamp

      - name: Read Timestamp from File
        id: read-timestamp
        run: echo "TIMESTAMP=$(cat timestamp.txt)" >> $GITHUB_ENV

      - name: Checkout Helm manifest repo
        uses: actions/checkout@v2
        with:
          repository: djoksa4/kubernetes-CICD-webapp-MANIFEST
          token: ${{ secrets.HELM_REPO_TOKEN }}
          path: helm-manifests

      - name: Update values.yaml with new image tag
        run: |
          cd helm-manifests
          sed -i "s/tag: \".*\"/tag: \"${{ env.TIMESTAMP }}\"/" my-app/values.yaml

      - name: Commit and push changes to Helm manifest repo
        run: |
          cd helm-manifests
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add my-app/values.yaml
          git commit -m "Update image tag to ${TIMESTAMP}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.HELM_REPO_TOKEN }}

